{"ast":null,"code":"var _jsxFileName = \"D:\\\\HackIndia\\\\my-react-app\\\\app\\\\src\\\\components\\\\Navbar\\\\Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport \"./Navbar.css\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadAccount, loadProvider } from '../../store/interactions';\nimport Blockies from \"react-blockies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const dispatch = useDispatch();\n  const provider = useSelector(state => state.provider.connection);\n  const account = useSelector(state => state.provider.account);\n  const balance = useSelector(state => state.provider.balance);\n\n  // Ensure provider is loaded on mount\n  useEffect(() => {\n    const initializeProvider = async () => {\n      if (!provider) {\n        const providerInstance = loadProvider(dispatch);\n        if (providerInstance) {\n          await loadAccount(providerInstance, dispatch);\n        }\n      }\n    };\n    initializeProvider();\n  }, [dispatch, provider]);\n  const connectHandler = async () => {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const providerInstance = provider || loadProvider(dispatch);\n        if (providerInstance) {\n          await loadAccount(providerInstance, dispatch);\n        }\n      } catch (error) {\n        console.error(\"Error connecting to the wallet:\", error);\n      }\n    } else {\n      alert(\"Please install MetaMask or another Ethereum wallet!\");\n    }\n  };\n  const networkHandler = async e => {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        await window.ethereum.request({\n          method: \"wallet_switchEthereumChain\",\n          params: [{\n            chainId: `0x${parseInt(e.target.value).toString(16)}`\n          }] // Convert to hex\n        });\n      } catch (error) {\n        console.error(\"Failed to switch network:\", error);\n      }\n    } else {\n      alert(\"Ethereum provider not found. Please install MetaMask.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navname\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"E-Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navnetworkSelector\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"network\",\n        id: \"network\",\n        onChange: networkHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"0\",\n          disabled: true,\n          children: \"Select Network\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"31337\",\n          children: \"Localhost\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"11155111\",\n          children: \"Sepolia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbalance\",\n      children: [balance && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"navmyBalance\",\n        children: [/*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"My Balance: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), Number(balance).toFixed(2), \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), account ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navmyAccount\",\n        onClick: () => {},\n        children: [/*#__PURE__*/_jsxDEV(Blockies, {\n          seed: account,\n          size: 8,\n          scale: 3,\n          color: \"#2187D0\",\n          bgColor: \"#F1F2F9\",\n          spotColor: \"#767f92\",\n          className: \"identicon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), account.slice(0, 5) + \"...\" + account.slice(38, 42)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navbalance-box\",\n        onClick: connectHandler,\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(Navbar, \"wQU19d7ZN+DFCA5MGGzWfSLTvRk=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","loadAccount","loadProvider","Blockies","jsxDEV","_jsxDEV","Navbar","_s","dispatch","provider","state","connection","account","balance","initializeProvider","providerInstance","connectHandler","window","ethereum","error","console","alert","networkHandler","e","request","method","params","chainId","parseInt","target","value","toString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","id","onChange","disabled","Number","toFixed","onClick","seed","size","scale","color","bgColor","spotColor","slice","_c","$RefreshReg$"],"sources":["D:/HackIndia/my-react-app/app/src/components/Navbar/Navbar.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport \"./Navbar.css\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loadAccount, loadProvider } from '../../store/interactions';\r\nimport Blockies from \"react-blockies\";\r\n\r\nconst Navbar = () => {\r\n    const dispatch = useDispatch();\r\n    const provider = useSelector((state) => state.provider.connection);\r\n    const account = useSelector((state) => state.provider.account);\r\n    const balance = useSelector((state) => state.provider.balance);\r\n\r\n    // Ensure provider is loaded on mount\r\n    useEffect(() => {\r\n        const initializeProvider = async () => {\r\n            if (!provider) {\r\n                const providerInstance = loadProvider(dispatch);\r\n                if (providerInstance) {\r\n                    await loadAccount(providerInstance, dispatch);\r\n                }\r\n            }\r\n        };\r\n        initializeProvider();\r\n    }, [dispatch, provider]);\r\n\r\n    const connectHandler = async () => {\r\n        if (typeof window.ethereum !== 'undefined') {\r\n            try {\r\n                const providerInstance = provider || loadProvider(dispatch);\r\n                if (providerInstance) {\r\n                    await loadAccount(providerInstance, dispatch);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error connecting to the wallet:\", error);\r\n            }\r\n        } else {\r\n            alert(\"Please install MetaMask or another Ethereum wallet!\");\r\n        }\r\n    };\r\n\r\n    const networkHandler = async (e) => {\r\n        if (typeof window.ethereum !== 'undefined') {\r\n            try {\r\n                await window.ethereum.request({\r\n                    method: \"wallet_switchEthereumChain\",\r\n                    params: [{ chainId: `0x${parseInt(e.target.value).toString(16)}` }], // Convert to hex\r\n                });\r\n            } catch (error) {\r\n                console.error(\"Failed to switch network:\", error);\r\n            }\r\n        } else {\r\n            alert(\"Ethereum provider not found. Please install MetaMask.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"Navbar\">\r\n            <div className=\"navname\">\r\n                <h2>E-Report</h2>\r\n            </div>\r\n            <div className=\"navnetworkSelector\">\r\n                <select name=\"network\" id=\"network\" onChange={networkHandler}>\r\n                    <option value=\"0\" disabled>Select Network</option>\r\n                    <option value=\"31337\">Localhost</option>\r\n                    <option value=\"11155111\">Sepolia</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"navbalance\">\r\n                {balance && (\r\n                    <p className=\"navmyBalance\">\r\n                        <small>My Balance: </small>\r\n                        {Number(balance).toFixed(2)} ETH\r\n                    </p>\r\n                )}\r\n                {account ? (\r\n                    <button className=\"navmyAccount\" onClick={() => { }}>\r\n                        <Blockies\r\n                            seed={account}\r\n                            size={8}\r\n                            scale={3}\r\n                            color=\"#2187D0\"\r\n                            bgColor=\"#F1F2F9\"\r\n                            spotColor=\"#767f92\"\r\n                            className=\"identicon\"\r\n                        />\r\n                        {account.slice(0, 5) + \"...\" + account.slice(38, 42)}\r\n                    </button>\r\n                ) : (\r\n                    <button className=\"navbalance-box\" onClick={connectHandler}>\r\n                        Connect Wallet\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}