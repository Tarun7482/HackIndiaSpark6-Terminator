{"ast":null,"code":"import React,{useEffect}from'react';import{Provider,useDispatch}from'react-redux';import store from'./store/store';import{loadMedical,loadNetwork,loadProvider}from\"./store/interactions\";import{medicalLoaded}from'./store/reducer';import{Form,Navbar}from\"./components\";import config from\"./config.json\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function AppContent(){const dispatch=useDispatch();useEffect(()=>{const loadBlockchainData=async()=>{try{const provider=loadProvider(dispatch);const chainId=await loadNetwork(provider,dispatch);const chainConfig=config[chainId];if(chainConfig&&chainConfig.MedicalRecord){const medical_config=chainConfig.MedicalRecord;const medical=await loadMedical(provider,medical_config.address,dispatch);dispatch(medicalLoaded({medical}));}else{console.error(\"No configuration found for chainId:\",chainId);}}catch(error){console.error(\"Error loading blockchain data:\",error);}};loadBlockchainData();},[dispatch]);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Welcome to The decentralised Medical Report Record System \"}),/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(Form,{})]});}function App(){return/*#__PURE__*/_jsx(Provider,{store:store,children:/*#__PURE__*/_jsx(AppContent,{})});}export default App;","map":{"version":3,"names":["React","useEffect","Provider","useDispatch","store","loadMedical","loadNetwork","loadProvider","medicalLoaded","Form","Navbar","config","jsx","_jsx","jsxs","_jsxs","AppContent","dispatch","loadBlockchainData","provider","chainId","chainConfig","MedicalRecord","medical_config","medical","address","console","error","className","children","App"],"sources":["D:/HackIndia/my-react-app/app/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Provider, useDispatch } from 'react-redux';\nimport store from './store/store';\nimport { loadMedical, loadNetwork, loadProvider } from \"./store/interactions\";\nimport { medicalLoaded } from './store/reducer'; \nimport { Form, Navbar } from \"./components\";\nimport config from \"./config.json\";\n\n\nfunction AppContent() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const loadBlockchainData = async () => {\n      try {\n        const provider = loadProvider(dispatch);\n        const chainId = await loadNetwork(provider, dispatch);\n       \n        const chainConfig = config[chainId];\n        if (chainConfig && chainConfig.MedicalRecord) {\n          const medical_config = chainConfig.MedicalRecord;\n          const medical = await loadMedical(provider, medical_config.address, dispatch);\n          dispatch(medicalLoaded({ medical }));\n        } else {\n          console.error(\"No configuration found for chainId:\", chainId);\n        }\n      } catch (error) {\n        console.error(\"Error loading blockchain data:\", error);\n      }\n    };\n    loadBlockchainData();\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <h1>Welcome to The decentralised Medical Report Record System </h1>\n      <Navbar />\n      <Form />\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <AppContent />\n    </Provider>\n  );\n}\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,QAAQ,CAAEC,WAAW,KAAQ,aAAa,CACnD,MAAO,CAAAC,KAAK,KAAM,eAAe,CACjC,OAASC,WAAW,CAAEC,WAAW,CAAEC,YAAY,KAAQ,sBAAsB,CAC7E,OAASC,aAAa,KAAQ,iBAAiB,CAC/C,OAASC,IAAI,CAAEC,MAAM,KAAQ,cAAc,CAC3C,MAAO,CAAAC,MAAM,KAAM,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAGnC,QAAS,CAAAC,UAAUA,CAAA,CAAG,CACpB,KAAM,CAAAC,QAAQ,CAAGd,WAAW,CAAC,CAAC,CAE9BF,SAAS,CAAC,IAAM,CACd,KAAM,CAAAiB,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAGZ,YAAY,CAACU,QAAQ,CAAC,CACvC,KAAM,CAAAG,OAAO,CAAG,KAAM,CAAAd,WAAW,CAACa,QAAQ,CAAEF,QAAQ,CAAC,CAErD,KAAM,CAAAI,WAAW,CAAGV,MAAM,CAACS,OAAO,CAAC,CACnC,GAAIC,WAAW,EAAIA,WAAW,CAACC,aAAa,CAAE,CAC5C,KAAM,CAAAC,cAAc,CAAGF,WAAW,CAACC,aAAa,CAChD,KAAM,CAAAE,OAAO,CAAG,KAAM,CAAAnB,WAAW,CAACc,QAAQ,CAAEI,cAAc,CAACE,OAAO,CAAER,QAAQ,CAAC,CAC7EA,QAAQ,CAACT,aAAa,CAAC,CAAEgB,OAAQ,CAAC,CAAC,CAAC,CACtC,CAAC,IAAM,CACLE,OAAO,CAACC,KAAK,CAAC,qCAAqC,CAAEP,OAAO,CAAC,CAC/D,CACF,CAAE,MAAOO,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACxD,CACF,CAAC,CACDT,kBAAkB,CAAC,CAAC,CACtB,CAAC,CAAE,CAACD,QAAQ,CAAC,CAAC,CAEd,mBACEF,KAAA,QAAKa,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBhB,IAAA,OAAAgB,QAAA,CAAI,4DAA0D,CAAI,CAAC,cACnEhB,IAAA,CAACH,MAAM,GAAE,CAAC,cACVG,IAAA,CAACJ,IAAI,GAAE,CAAC,EACL,CAAC,CAEV,CAEA,QAAS,CAAAqB,GAAGA,CAAA,CAAG,CACb,mBACEjB,IAAA,CAACX,QAAQ,EAACE,KAAK,CAAEA,KAAM,CAAAyB,QAAA,cACrBhB,IAAA,CAACG,UAAU,GAAE,CAAC,CACN,CAAC,CAEf,CAEA,cAAe,CAAAc,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}