{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';const providerSlice=createSlice({name:'provider',initialState:{connection:null,chainId:null,account:null,balance:null},reducers:{providerLoaded:(state,action)=>{state.connection=action.payload.connection;},networkLoaded:(state,action)=>{state.chainId=action.payload.chainId.toString();},accountLoaded:(state,action)=>{state.account=action.payload.account;},etherBalanceLoaded:(state,action)=>{state.balance=typeof action.payload.balance==='string'?action.payload.balance:action.payload.balance.toString();}}});const medicalSlice=createSlice({name:'medical',initialState:{loaded:false,contract:null},reducers:{medicalLoaded:(state,action)=>{state.loaded=true;state.contract=action.payload.medical;}}});export const{providerLoaded,networkLoaded,accountLoaded,etherBalanceLoaded}=providerSlice.actions;export const{medicalLoaded}=medicalSlice.actions;export const providerReducer=providerSlice.reducer;export const medicalReducer=medicalSlice.reducer;","map":{"version":3,"names":["createSlice","providerSlice","name","initialState","connection","chainId","account","balance","reducers","providerLoaded","state","action","payload","networkLoaded","toString","accountLoaded","etherBalanceLoaded","medicalSlice","loaded","contract","medicalLoaded","medical","actions","providerReducer","reducer","medicalReducer"],"sources":["D:/HackIndia/my-react-app/app/src/store/reducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst providerSlice = createSlice({\r\n  name: 'provider',\r\n  initialState: {\r\n    connection: null,\r\n    chainId: null,\r\n    account: null,\r\n    balance: null,\r\n  },\r\n  reducers: {\r\n    providerLoaded: (state, action) => {\r\n      state.connection = action.payload.connection;\r\n    },\r\n    networkLoaded: (state, action) => {\r\n      state.chainId = action.payload.chainId.toString();\r\n    },\r\n    accountLoaded: (state, action) => {\r\n      state.account = action.payload.account;\r\n    },\r\n    etherBalanceLoaded: (state, action) => {\r\n      state.balance = typeof action.payload.balance === 'string'\r\n        ? action.payload.balance\r\n        : action.payload.balance.toString();\r\n    },\r\n  },\r\n});\r\n\r\nconst medicalSlice = createSlice({\r\n  name: 'medical',\r\n  initialState: {\r\n    loaded: false,\r\n    contract: null,\r\n  },\r\n  reducers: {\r\n    medicalLoaded: (state, action) => {\r\n      state.loaded = true;\r\n      state.contract = action.payload.medical;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  providerLoaded,\r\n  networkLoaded,\r\n  accountLoaded,\r\n  etherBalanceLoaded,\r\n} = providerSlice.actions;\r\n\r\nexport const { medicalLoaded } = medicalSlice.actions;\r\n\r\nexport const providerReducer = providerSlice.reducer;\r\nexport const medicalReducer = medicalSlice.reducer;"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,KAAM,CAAAC,aAAa,CAAGD,WAAW,CAAC,CAChCE,IAAI,CAAE,UAAU,CAChBC,YAAY,CAAE,CACZC,UAAU,CAAE,IAAI,CAChBC,OAAO,CAAE,IAAI,CACbC,OAAO,CAAE,IAAI,CACbC,OAAO,CAAE,IACX,CAAC,CACDC,QAAQ,CAAE,CACRC,cAAc,CAAEA,CAACC,KAAK,CAAEC,MAAM,GAAK,CACjCD,KAAK,CAACN,UAAU,CAAGO,MAAM,CAACC,OAAO,CAACR,UAAU,CAC9C,CAAC,CACDS,aAAa,CAAEA,CAACH,KAAK,CAAEC,MAAM,GAAK,CAChCD,KAAK,CAACL,OAAO,CAAGM,MAAM,CAACC,OAAO,CAACP,OAAO,CAACS,QAAQ,CAAC,CAAC,CACnD,CAAC,CACDC,aAAa,CAAEA,CAACL,KAAK,CAAEC,MAAM,GAAK,CAChCD,KAAK,CAACJ,OAAO,CAAGK,MAAM,CAACC,OAAO,CAACN,OAAO,CACxC,CAAC,CACDU,kBAAkB,CAAEA,CAACN,KAAK,CAAEC,MAAM,GAAK,CACrCD,KAAK,CAACH,OAAO,CAAG,MAAO,CAAAI,MAAM,CAACC,OAAO,CAACL,OAAO,GAAK,QAAQ,CACtDI,MAAM,CAACC,OAAO,CAACL,OAAO,CACtBI,MAAM,CAACC,OAAO,CAACL,OAAO,CAACO,QAAQ,CAAC,CAAC,CACvC,CACF,CACF,CAAC,CAAC,CAEF,KAAM,CAAAG,YAAY,CAAGjB,WAAW,CAAC,CAC/BE,IAAI,CAAE,SAAS,CACfC,YAAY,CAAE,CACZe,MAAM,CAAE,KAAK,CACbC,QAAQ,CAAE,IACZ,CAAC,CACDX,QAAQ,CAAE,CACRY,aAAa,CAAEA,CAACV,KAAK,CAAEC,MAAM,GAAK,CAChCD,KAAK,CAACQ,MAAM,CAAG,IAAI,CACnBR,KAAK,CAACS,QAAQ,CAAGR,MAAM,CAACC,OAAO,CAACS,OAAO,CACzC,CACF,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CACXZ,cAAc,CACdI,aAAa,CACbE,aAAa,CACbC,kBACF,CAAC,CAAGf,aAAa,CAACqB,OAAO,CAEzB,MAAO,MAAM,CAAEF,aAAc,CAAC,CAAGH,YAAY,CAACK,OAAO,CAErD,MAAO,MAAM,CAAAC,eAAe,CAAGtB,aAAa,CAACuB,OAAO,CACpD,MAAO,MAAM,CAAAC,cAAc,CAAGR,YAAY,CAACO,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}